# vimproc

In first, you get vimproc from git repository.

http://github.com/Shougo/vimproc

Next, make external dll "vimproc\_xxx.so(or vimproc\_win32.dll,
vimproc\_cygwin.dll)". Because vimproc depends on "vimproc\_xxx.so(or
vimproc\_win32.dll, vimproc\_cygwin.dll)"'s function, vimproc echo error message
when "vimproc\_xxx.so(vimproc\_xxx.dll)" don't exist.

Note: The vimproc\_cygwin.dll compiled in Cygwin can't work for Windows Vim.

Supported platforms:
* Windows 32/64bit (Compiled by MinGW or Visual Studio)
* Mac OS X (10.5 or later)
* Linux
* Cygwin
* Solaris
* BSD (but cannot check)

Not supported platforms:
* Android (may work but no support)
* Other UNIX platforms

Below is Make command.
* Windows using Mingw(32bit Vim):
	$ make -f make_mingw32.mak

* Windows using Mingw(64bit Vim):
	$ make -f make_mingw64.mak

* Windows using Visual Studio(32bit/64bit Vim):
	$ nmake -f Make_msvc.mak nodebug=1

* Mac OS X using LLVM:
	$ make -f make_mac.mak

* Old Mac OS X(llvm-gcc is not installed):
	$ make -f make_mac_old.mak

* Linux/BSD:
	$ make -f make_unix.mak

* Cygwin:
	$ make -f make_cygwin.mak

* Solaris/Sun  OS:
	$ make -f make_sunos.mak

After compile, you copy `autoload/*` and `plugin/*` files to your
'runtimepath' directory (see `:help runtimepath`).

I compiled `vimproc_win**.dll` in 32/64 bit Windows, and distributed it below
URL.
Note: I DON'T recommend to use it. You should build dll files manually.
https://github.com/Shougo/vimproc/downloads
Note: Github dowonloads feature is deprecated. It may be deleted.

You can use Kaoriya Vim in Windows. It includes vimproc dll file.
(http://www.kaoriya.net/news/2012/20121213)

If you use |neobundle.vim|, you can update and build vimproc automatically.
http://github.com/Shougo/neobundle.vim

Example for neobundle:
	NeoBundle 'Shougo/vimproc', {
	      \ 'build' : {
	      \     'windows' : 'make -f make_mingw32.mak',
	      \     'cygwin' : 'make -f make_cygwin.mak',
	      \     'mac' : 'make -f make_mac.mak',
	      \     'unix' : 'make -f make_unix.mak',
	      \    },
	      \ }

