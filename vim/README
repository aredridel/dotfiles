You can think of this plugin either as some kind of ad-hoc 
tags/cescope-like solution or as a project-oriented and slightly 
programming-language-aware alternative to grep that should support poor 
dynamic programmers with refactoring. Like grep it scans files only as 
needed and doesn't build a database, which is ok for smaller projects 
and fast hard disks. It's more flexible and easier to configure (vim 
only, no external program required) than tags/cescope. Apart from the 
basic grep-like functionality, it can be used to find locations where a 
variable is defined, where it is assigned to another variable, where a 
method is called and stuff like that. At least that's the idea. The 
plugin hasn't reached the point yet to be 100% useful.


Usage~

First, define which files belong to your project. Most likely your 
project's source files are already registered in your tags files, which 
will be used by default. So, if you use tags, there is nothing more you 
need to do. Alternatively you can set the variable [wbg]:trag_files to a 
list of files that will be used instead. (Setting this variable will 
prevent the use of tags.)

Secondly, perform certain operations on these files, like:

    - Select a file to edit (using :TRagfile)
    - Scan files for an expression (using :TRag, :TRagsearch, or 
      :TRaggrep): You can restrict searches to certain "kinds" like only 
      variable definitions or only function calls.


-----------------------------------------------------------------------

Status:  Works for me (there may be some minor quirks)
Dependencies:
  tlib :: http://github.com/tomtom/tlib_vim
      > git clone git://github.com/tomtom/tlib_vim.git
Install: See http://github.com/tomtom/vimtlib/blob/master/INSTALL.TXT
See http://github.com/tomtom for related plugins.

