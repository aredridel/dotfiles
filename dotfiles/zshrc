source ~/.profile

if which brew 2>/dev/null >/dev/null; then
    BREW=yes
fi

if [ -z "$PROFILE_LOADED" ]; then
    source "$HOME/.profile"
fi

if [ -n "$BREW" ]; then
    source $(brew --prefix)/share/antigen/antigen.zsh
    fpath=($(brew --prefix)/share/zsh-completions $fpath)
else
    source /usr/share/zsh-antigen/antigen.zsh
fi

antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle softmoth/zsh-vim-mode@main
antigen bundle VirtusLab/git-machete completion
antigen bundle jeffreytse/zsh-vi-mode

antigen theme robbyrussell

antigen apply

zstyle ':completion:*:*' ignored-patterns '*ORIG_HEAD'

autoload -U compinit && compinit -u

if which starship 2> /dev/null >/dev/null; then
    source <(starship init zsh --print-full-init)
fi

if which awless 2> /dev/null >/dev/null; then
    source <(awless completion zsh)
fi

if which zoxide 2>/dev/null >/dev/null; then
    source <(zoxide init zsh)
fi

#if which powerline-go 2> /dev/null >/dev/null; then
#    function powerline_precmd() {
#        PS1="$(powerline-go -error $? -shell zsh)"
#    }
#
#    function install_powerline_precmd() {
#        for s in "${precmd_functions[@]}"; do
#            if [ "$s" = "powerline_precmd" ]; then
#            return
#            fi
#        done
#        precmd_functions+=(powerline_precmd)
#    }
#
#    if [ "$TERM" != "linux" ]; then
#        install_powerline_precmd
#    fi
#fi

setopt EXTENDED_HISTORY         # include timestamp
setopt HIST_BEEP                # beep if attempting to access a history entry which isn’t there
setopt HIST_EXPIRE_DUPS_FIRST   # trim dupes first if history is full
setopt HIST_FIND_NO_DUPS        # do not display previously found command
setopt HIST_IGNORE_DUPS         # do not save duplicate of prior command
setopt HIST_IGNORE_SPACE        # do not save if line starts with space
setopt HIST_NO_STORE            # do not save history commands
setopt HIST_REDUCE_BLANKS       # strip superfluous blanks
setopt INC_APPEND_HISTORY       # don’t wait for shell to exit to save history lines
setopt HIST_VERIFY

autoload -U +X bashcompinit && bashcompinit

if which himalaya > /dev/null; then
    eval `himalaya completion zsh`
fi

if which kubectl > /dev/null; then 
    eval `kubectl completion zsh`
fi

# bun completions
[ -s "/home/astewart/.bun/_bun" ] && source "/home/astewart/.bun/_bun"

unsetopt nomatch

function zellij_refresh_ssh_sock {
  if [ -n "$ZELLIJ" ]; then
    local FOUND="$([ -n "$(echo /tmp/ssh*(N))" ] && find /tmp/ssh*/ -type s -name "*agent.*" 2>/dev/null | head -1)"
    if [ -n "$FOUND" ]; then
      export SSH_AUTH_SOCK="$FOUND"
    elif [ -s "/home/astewart/.1password/agent.sock" ]; then
      export SSH_AUTH_SOCK="/home/astewart/.1password/agent.sock"
    fi
  fi
}

add-zsh-hook precmd zellij_refresh_ssh_sock

function ssh {
	command ssh "$@"
	X=$?
	stty sane
	return $X
}
