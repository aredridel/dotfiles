#!/bin/sh
export TIME_STYLE=long-iso
alias ll="exa -lh --git"

pathx() {
    local WHERE="$1"
    local VAR="$2"
    local VAL="$3"
    test -n "$VAR" && test -d "$VAL" || return 1

    eval "local OLD=\"\$$VAR\""

    case ":$OLD:" in
	*:"$VAL":*)
	;;
	*)
	    if test -z "$OLD"; then 
		eval "export $VAR=$VAL"
	    elif test "$WHERE" = "append"; then
		eval "export $VAR=$OLD:$VAL"
	    elif test "$WHERE" = "prepend"; then
		eval "export $VAR=$VAL:$OLD"
	    fi
	;;
    esac
    return 0
}

if test -d "/opt/homebrew/bin"; then
    pathx prepend PATH "/opt/homebrew/bin"
fi

if test -d "$HOME/.local/state/nix/profile/bin"; then
    NIX_PROFILE="$HOME/.local/state/nix/profile"
    pathx prepend PATH "$NIX_PROFILE/bin"
elif test -d "$HOME/.nix-profile/etc/profile.d/nix.sh"; then
    NIX_PROFILE="$HOME/.nix-profile"
    . "$HOME/.nix-profile/etc/profile.d/nix.sh"
fi

if test -r "$NIX_PROFLE/etc/profile.d/hm-session-vars.sh"; then
    source "$NIX_PROFILE/etc/profile.d/hm-session-vars.sh"
fi

pathx prepend PATH "$HOME/.composer/vendor/bin"

pathx prepend PATH "/usr/pkg/sbin"
pathx prepend PATH "/usr/pkg/bin"
pathx prepend MANPATH "/usr/pkg/man"

if which brew >/dev/null 2>&1; then
    pathx prepend PATH "$(brew --prefix)/bin"
    pathx prepend PATH "$(brew --prefix)/sbin"
fi

if which vim 2>/dev/null >/dev/null; then
    VISUAL=vim
elif which vis 2>/dev/null >/dev/null; then
    VISUAL=vis
elif which vi 2>/dev/null >/dev/null; then
    VISUAL=vi
fi
export VISUAL

if test -d "$HOME/.local/share/pnpm"; then
    PNPM_HOME="$HOME/.local/share/pnpm"
    export PNPM_HOME
fi

pathx prepend PATH "$PNPM_HOME"

pathx prepend PATH "$HOME/.cargo/bin"

if test -f "$HOME/.cargo/env"; then
    . "$HOME/.cargo/env"
fi

if test -S "$SSH_AUTH_SOCK"; then
    rm "$HOME/.ssh/last-auth.sock"
    ln -s "$SSH_AUTH_SOCK" "$HOME/.ssh/last-auth.sock"
fi

if which systemctl 2>/dev/null >/dev/null; then
    systemctl --user import-environment PATH
fi

export LD_LIBRARY_PATH
export MANPATH

GRAB_HOME="$HOME/Projects/"
export GRAB_HOME

pathx append PATH "$HOME/Library/Application Support/Coursier/bin"
pathx append PATH "$HOME/.local/share/coursier/bin"

if which cs > /dev/null; then
    eval "$(cs java --env --jvm temurin:21)"
fi

if [ -n "$JAVA_HOME" ]; then
    pathx append PATH "$JAVA_HOME/bin"
fi

if [ -e "$HOME/.1password/agent.sock" -a -z "$SSH_CONNECTION" ]; then
    export SSH_AUTH_SOCK="$HOME/.1password/agent.sock"
fi
if [ -e "$HOME/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock" -a -z "$SSH_CONNECTION" ]; then
    export SSH_AUTH_SOCK="$HOME/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock"
fi

[ -n "$BASH_VERSION" ] && shopt -s nullglob
[ -n "$ZSH_VERSION" ] && setopt -G
for DIR in "$HOME/.local/opt/"*; do
    pathx append PATH "$DIR/bin"
    pathx append MANPATH "$DIR/man"
done
[ -n "$BASH_VERSION" ] && shopt -u nullglob
[ -n "$ZSH_VERSION" ] && unsetopt -G

if which nvim > /dev/null 2>&1; then
    export EDITOR=nvim
fi

if test -d "$HOME/.local/bin"; then
    pathx prepend PATH "$HOME/.local/bin"
    pathx prepend LD_LIBRARY_PATH "$HOME/.local/lib"
    pathx prepend MANPATH "$HOME/.local/share/man"
fi

if test -f "$HOME/.profile.local"; then
    source "$HOME/.profile.local"
fi

if [ -z "$SSH_CONNECTION" -a -S "$HOME/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock" ]; then
    SSH_AUTH_SOCK="$HOME/Library/Group Containers/2BUA8C4S2C.com.1password/t/agent.sock"
    export SSH_AUTH_SOCK
fi

NIXPKGS_ALLOW_UNFREE=1
export NIXPKGS_ALLOW_UNFREE

pathx append PATH "$HOME/.krew/bin"
pathx append PATH "$HOME/.mint/bin"
pathx append PATH "$HOME/.lmstudio/bin"

PROFILE_LOADED=1

if [ -f "$HOME/.atuin/bin/env" ]; then
    . "$HOME/.atuin/bin/env"
fi

KUBECTL_KYAML=true
export KUBECTL_KYAML
